#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define all(x) x.begin(),x.end()

void init_code() {
    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
}

int main() {
    init_code();    
    int n,m; cin >> n >> m;
    vector<int> v[n+1];
    for(int i = 0; i < m; i++){
        int x,y; cin >> x >> y;
        v[x].push_back(y);
        v[y].push_back(x);
    }
//bfs
    vector<int> par(n+1,-1);
    queue<pair<int,int>> q;
    q.push({1,par[1]});
    while(q.size()){
        pair<int,int> cur = q.front();
        q.pop();
        for(auto &x : v[cur.first]){
            if(par[x] == -1 && x != 1){
                q.push({x,cur.first});
                par[x] = cur.first;
            }
        }
    }
//making path
    vector<int> path;
    int ind = n;
    while(ind != -1){
        path.push_back(ind);
        ind = par[ind];
    }
//printing path
    if(path.back() != 1){
        cout << "IMPOSSIBLE";
    }
    else{
        cout << path.size() << endl;
        while(!path.empty()){
            cout << path.back() << " ";
            path.pop_back();
        }
    }
}
